name: Manual Build

on:
  workflow_dispatch:
    inputs:
      build_windows:
        description: 'Build Windows version'
        required: true
        default: true
        type: boolean
      build_android:
        description: 'Build Android version'
        required: true
        default: true
        type: boolean
      create_release:
        description: 'Create GitHub Release'
        required: true
        default: false
        type: boolean
      release_tag:
        description: 'Release tag (required if creating release)'
        required: false
        type: string

jobs:
  build-windows:
    if: ${{ github.event.inputs.build_windows == 'true' }}
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Configure Flutter
        run: flutter config --no-analytics
        
      - name: Get dependencies
        run: flutter pub get

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create Windows archive
        run: |
          cd build/windows/x64/runner/Release
          7z a -tzip ../../../../../flutter_word_dictation_windows.zip *

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: flutter_word_dictation_windows.zip
          retention-days: 30

  build-android:
    if: ${{ github.event.inputs.build_android == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release --no-shrink

      - name: Build Android App Bundle
        run: flutter build appbundle --release --no-shrink

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  create-release:
    if: ${{ github.event.inputs.create_release == 'true' && github.event.inputs.release_tag != '' }}
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifact
        if: ${{ github.event.inputs.build_windows == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Download Android APK
        if: ${{ github.event.inputs.build_android == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: android-apk

      - name: Download Android App Bundle
        if: ${{ github.event.inputs.build_android == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: android-aab

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: Release ${{ github.event.inputs.release_tag }}
          files: |
            flutter_word_dictation_windows.zip
            app-release.apk
            app-release.aab
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}