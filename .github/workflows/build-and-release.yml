name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'

      - name: Configure Flutter
        run: flutter config --no-analytics
        
      - name: Get dependencies
        run: flutter pub get

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create Windows archive
        run: |
          cd build/windows/x64/runner/Release
          7z a -tzip ../../../../../flutter_word_dictation_windows.zip *

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: flutter_word_dictation_windows.zip

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      # Restore release keystore and write key.properties for signing (if secrets provided)
      - name: Restore Android keystore
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "Restoring upload-keystore.jks"
            echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          else
            echo "ANDROID_KEYSTORE_BASE64 is empty; will fall back to debug signing"
          fi

      - name: Create key.properties
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ] && [ -n "${{ secrets.ANDROID_KEY_PASSWORD }}" ] && [ -n "${{ secrets.ANDROID_KEY_ALIAS }}" ]; then
            echo "storeFile=android/app/upload-keystore.jks" > key.properties
            echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> key.properties
            echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> key.properties
            echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> key.properties
            echo "key.properties created"
          else
            echo "Android signing secrets missing; will fall back to debug signing"
          fi

      - name: Build Android APK
        run: flutter build apk --release --no-shrink

      - name: Build Android App Bundle
        run: flutter build appbundle --release --no-shrink

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  create-release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk

      - name: Download Android App Bundle
        uses: actions/download-artifact@v4
        with:
          name: android-aab

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            flutter_word_dictation_windows.zip
            app-release.apk
            app-release.aab
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}